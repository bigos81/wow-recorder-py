name: Build

on: [push]

defaults:
  run:
    shell: bash
    working-directory: src

jobs:
  Lint:
    name: Lint and test code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.13

      - name: Install Linters
        run: |
          pip install pylint
          pip install mypy
          pip install types-python-dateutil

      - name: Run Linter pyLint
        run: pylint --fail-under=8 $(git ls-files '*.py')

      - name: Run Linter mypy
        run: mypy --follow-untyped-imports --explicit-package-bases --ignore-missing-imports $(git ls-files '*.py')


  Build:
    name: Build release binaries
    needs: Lint

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.13

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip pyinstaller pytest
          pip install -r requirements.txt

      - name: Build with pyinstaller
        run: pyinstaller --onefile --console --name=src-${{ matrix.os }} main.py

      - name: Include configuration file
        run: cp wow_recorder_py-${{ matrix.os }}.cfg dist/wow_recorder_py.cfg

      - name: Include .desktop script for Linux
        if: matrix.os == 'ubuntu-latest'
        run: cp src/wow-recorder.desktop dist/wow-recorder.desktop

      - name: Deploy artifacts
        uses: actions/upload-artifact@v4
        with:
          name: src-${{ matrix.os }}
          path: | 
            src/dist/wow-recorder-${{ matrix.os }}*
            src/dist/wow-recorder.desktop
            src/dist/wow_recorder_py.cfg
          if-no-files-found: error
